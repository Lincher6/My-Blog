{"version":3,"sources":["components/ProfilePage/ProfileContent/MyPosts/Post/Post.module.css","components/Auth/Login/Login.module.css","components/DialogsPage/Dialogs/Dialog/Dialog.module.css","components/UsersPage/UsersSearch/UsersSearch.module.css","forms/searchForm/SearchForm.module.css","components/ProfilePage/ProfileContent/MyStuff/MyStuff.module.css","components/ProfilePage/ProfileContent/MyPosts/MyPosts.module.css","forms/messageForm/MessageForm.module.css","components/common/Search/Search.module.css","components/DialogsPage/Dialogs/Dialogs.module.css","components/common/SpalshScreen/SplashScreen.module.css","assets/images/empty-avatar.png","components/UsersPage/Users/Users.module.css","components/common/Loader/Loader.module.css","components/UsersPage/UsersPage.module.css","components/ProfilePage/ProfileContent/ProfileContent.module.css","assets/images/icons/gearIcon.png","components/Header/ProfileMenu/ProfileMenu.module.css","assets/images/icons/social/instagram.svg","assets/images/icons/social/vk.png","assets/images/icons/social/telegram.svg","assets/images/icons/social/youtube.png","components/DialogsPage/DialogsPage.module.css","components/DialogsPage/Messages/Messages.module.css","assets/sounds/BlobSound.ogg","assets/images/icons/log-in.png","assets/images/icons/register.png","components/Navbar/Navbar.module.css","assets/images/icons/plus.png","components/HomePage/HomePage.module.css","components/Navbar/Navbar.jsx","api/api.js","redux/usersReducer.js","redux/actionTypes.js","components/common/Inputs/Inputs.js","components/UsersPage/Users/User/User.js","redux/profileReducer.js","redux/authReducer.js","redux/appReducer.js","redux/dialogsReducer.js","components/common/Loader/Loader.js","components/UsersPage/Users/Users.js","forms/searchForm/SearchForm.js","components/UsersPage/UsersSearch/UsersSearch.js","components/common/Pagination/Pagination.js","components/UsersPage/UsersPage.js","components/ProfilePage/ProfileInfo/ProfilePhoto/ProfilePhoto.js","forms/profileInfoForm/ProfileInfoForm.js","components/ProfilePage/ProfileInfo/ProfileInfoTable/ProfileInfoTable.js","components/ProfilePage/ProfileInfo/ProfileInfo.js","components/ProfilePage/ProfileContent/MyStuff/MyStuff.js","components/ProfilePage/ProfileContent/MyPosts/Post/Post.js","forms/messageForm/MessageForm.js","components/ProfilePage/ProfileContent/MyPosts/MyPosts.js","components/ProfilePage/ProfileContent/MyFriens/MyFriends.js","components/ProfilePage/ProfileContent/ProfileContent.js","components/ProfilePage/ProfilePage.js","components/Header/ProfileMenu/ProfileMenu.js","components/Header/ProfileSmall/ProfileSmall.js","components/common/Search/Search.js","components/Header/Header.js","forms/loginForm/LoginForm.js","components/Auth/Login/Login.js","components/Footer/Footer.js","components/DialogsPage/Dialogs/Dialog/Dialog.js","components/DialogsPage/Dialogs/Dialogs.js","components/DialogsPage/Messages/Message/Message.js","components/DialogsPage/Messages/Messages.js","hoc/withAuthRedirect.js","components/DialogsPage/DialogsPage.js","components/common/SpalshScreen/SplashScreen.js","components/HomePage/HomePage.js","components/ProfilePage/MyProfilePage.js","App.js","serviceWorker.js","redux/store.js","index.js","components/Footer/Footer.module.css","components/UsersPage/Users/User/User.module.css","components/Header/Header.module.css","components/common/Pagination/Pagination.module.css","components/Header/ProfileSmall/ProfileSmall.module.css","components/DialogsPage/Messages/Message/Message.module.css","assets/images/icons/umbrella-logo.png","forms/profileInfoForm/ProfileInfoForm.module.css","components/ProfilePage/ProfileContent/MyFriens/MyFriends.module.css","forms/loginForm/LoginForm.module.css","components/ProfilePage/ProfileInfo/ProfileInfo.module.css","App.module.css","assets/images/icons/profileIcon.png","assets/images/icons/dialogIcon.png","assets/images/icons/usersIcon.png"],"names":["module","exports","post","message","likes","login","title","rememberMe","text","error","dialog","active","newMessages","searchUsersWrapper","searchUsers","item","searchButton","myStuffWrapper","myStuff","MyPosts","newPost","posts","messageForm","errorMessage","searchField","searchIcon","users","findUsers","splashScreen","spin","picture","__webpack_require__","p","loader","usersPage","profileContent","profileMenu","dialogsWrapper","messages","nav","logo","page","newMessageCount","home","heartBeat","pages","pageText","jumpy","connect","state","currentDialogId","dialogsReducer","isAuth","authReducer","isAuthorized","appReducer","props","react_default","a","createElement","className","classes","react_router_dom","to","src","alt","exact","activeClassName","profileIcon","concat","dialogIcon","usersIcon","axiosInstance","axios","baseURL","withCredentials","headers","API-KEY","usersAPI","currentPage","pageSize","searchValue","get","then","response","data","userId","delete","profileAPI","status","put","profileData","Object","objectSpread","authAPI","email","password","dialogsAPI","body","messageId","initialState","totalUserCount","isLoading","followingInProgress","portionNumber","followSuccess","id","type","unFollowSuccess","setPortionNumber","payload","toggleIsLoading","toggleFollowingInProgress","isFetching","getUsers","arguments","length","undefined","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","sent","items","totalCount","stop","_x","apply","this","followFlow","_ref3","_callee3","action","apiAction","_context3","resultCode","_x3","_x4","_x5","_x6","Button","styled","button","_templateObject","dim","css","_templateObject2","blue","_templateObject3","TextArea","textarea","_templateObject4","_templateObject5","Input","input","_templateObject6","_templateObject7","empty","_templateObject8","CheckBox","attrs","_templateObject9","User","user","photos","small","userPhoto","followButton","followed","onClick","unFollow","disabled","some","follow","userInfo","name","location","sendMessage","startDialog","profile","currentProfileId","profileStatus","postText","setProfile","setProfileStatusAction","getProfile","getProfileStatus","_ref2","_callee2","_context2","_x2","userData","authError","setAuthData","setUserData","getAuthData","_data$data","_login","abrupt","setUserDataThunk","isInitialized","setNewMessageCount","currentDialogPhoto","dialogs","isMine","newMessage","messagesFetching","addMessageAction","setDialogs","setCurrentDialogId","toggleMessagesFetching","updateDialogs","getDialogs","console","log","getMessages","Loader","mapDispatchToProps","_ref5","_callee5","_context5","usersReducer","usersFetching","common_Loader_Loader","map","Users_User_User","assign","key","fields","filed","UsersFormik","withFormik","mapPropsToValues","handleSubmit","values","handleChange","formik_esm","index","onChange","UsersSearch","Pagination","_ref$pageSize","_ref$currentPage","_ref$portionSize","portionSize","onPageChange","pageCount","Math","ceil","i","push","portionsCount","leftBorder","rightBorder","pagesPortion","filter","leftButtonClasses","pageNumber","disable","rightButtonClasses","pageNumbers","join","index_esm","useEffect","pagination","common_Pagination_Pagination","UsersPage_Users_Users","UsersPage_UsersSearch_UsersSearch","ProfilePhoto","avatar","large","noPhoto","field","ProfileInfoFormik","aboutMe","lookingForAJob","updateProfileInfo","setProfileStatus","fullName","lookingForAJobDescription","_useState","useState","_useState2","slicedToArray","isEdit","setIsEdit","form","char","charValue","value","ProfileInfoTable","profileId","_ref4","_callee4","_context4","profileReducer","authUserId","objectWithoutProperties","info","ProfileInfo_ProfilePhoto_ProfilePhoto","ProfileInfoTable_ProfileInfoTable","MyStuff","style","textAlign","Post","smallPicture","role","aria-labelledby","MessageForm","autoFocus","errors","placeholder","onKeyDown","e","shiftKey","preventDefault","submitOnEnter","addPost","newPostText","MessageFormik","validationSchema","yup","shape","required","MyPosts_Post_Post","MyFriends","myFriendsWrapper","myFriends","friend","ProfileContent","ProfileContent_MyStuff_MyStuff","ProfileContent_MyPosts_MyPosts","MyFriens_MyFriends","compose","withRouter","useLayoutEffect","window","scrollTo","match","params","ProfilePage_ProfileInfo_ProfileInfo","ProfilePage_ProfileContent_ProfileContent","ProfileMenu","logout","ProfileSmall","profileSmall","options","gear","menu","Header_ProfileMenu_ProfileMenu","photoSmall","SearchFormik","search","history","headerWrapper","header","appName","common_Search_Search","auth","Header_ProfileSmall_ProfileSmall","register","href","target","bottom","LoginForm","touched","dataInput","LoginFormik","min","react_router","Footer","refs","icon","instagram","vk","telegram","youtube","footerWrapper","top","footer","row","ref","website","Dialog","setCurrentDialog","userName","hasNewMessages","newMessagesCount","Dialogs_Dialog_Dialog","Message","date","Date","addedAt","toLocaleDateString","cls","messageWrapper","personMessage","photo","myPhoto","deleteMessage","blobSound","Audio","audio","_ref6","_callee6","_context6","MessageReduxForm","play","useRef","current","scrollIntoView","behavior","block","Messages_Message_Message","senderId","withAuthRedirect","Component","componentProps","DialogsPage_Dialogs_Dialogs","DialogsPage_Messages_Messages","SplashScreen","HomePage","link","dialogsIcon","loginIcon","registerIcon","App","appInitialize","background","appWrapper","components_Navbar_Navbar","mainWrapper","components_Header_Header","content","path","component","MyProfilePage","ProfilePage","DialogsPage","UsersPage","Login","components_Footer_Footer","SpalshScreen_SplashScreen","messagesCount","Boolean","hostname","reducers","combineReducers","toConsumableArray","round","random","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","blob","infoAppear","description","characteristic","appear"],"mappings":"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","file":"static/js/main.c1fa3822.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3LoA4\",\"message\":\"Post_message__1R6OT\",\"likes\":\"Post_likes__3-8q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2D5ge\",\"title\":\"Login_title__3Fxpy\",\"rememberMe\":\"Login_rememberMe__37P2g\",\"text\":\"Login_text__2ASlj\",\"error\":\"Login_error__3LyUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__2fEIA\",\"active\":\"Dialog_active__2S1Va\",\"newMessages\":\"Dialog_newMessages__nos9f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchUsersWrapper\":\"UsersSearch_searchUsersWrapper__syuPn\",\"searchUsers\":\"UsersSearch_searchUsers__2rjTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"SearchForm_item__3W6Vc\",\"searchButton\":\"SearchForm_searchButton__97sZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myStuffWrapper\":\"MyStuff_myStuffWrapper__1jU0J\",\"myStuff\":\"MyStuff_myStuff__1bGwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPosts\":\"MyPosts_MyPosts__2DSLP\",\"newPost\":\"MyPosts_newPost__F_-Hb\",\"posts\":\"MyPosts_posts__F7ejN\",\"title\":\"MyPosts_title__UxB3b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageForm\":\"MessageForm_messageForm__25fzO\",\"errorMessage\":\"MessageForm_errorMessage__yPROj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchField\":\"Search_searchField__39ziV\",\"searchIcon\":\"Search_searchIcon__3eEZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Dialogs_users__8NHan\",\"findUsers\":\"Dialogs_findUsers__1AlSv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"splashScreen\":\"SplashScreen_splashScreen__xv-4X\",\"spin\":\"SplashScreen_spin__27Drk\",\"picture\":\"SplashScreen_picture__1l1Do\"};","module.exports = __webpack_public_path__ + \"static/media/empty-avatar.2da1ff8d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2ZEwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3jmkT\",\"spin\":\"Loader_spin__NOJvx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"UsersPage_usersPage__3GGNh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContent\":\"ProfileContent_profileContent__1jnJp\"};","module.exports = __webpack_public_path__ + \"static/media/gearIcon.d7936c3e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileMenu\":\"ProfileMenu_profileMenu__2ae8w\"};","module.exports = __webpack_public_path__ + \"static/media/instagram.b1c58ee1.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.5d9ecf94.png\";","module.exports = __webpack_public_path__ + \"static/media/telegram.a888fec0.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.a04938a0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"DialogsPage_dialogsWrapper__1sMjG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3lekQ\"};","module.exports = __webpack_public_path__ + \"static/media/BlobSound.ddf5f03e.ogg\";","module.exports = __webpack_public_path__ + \"static/media/log-in.41ecc497.png\";","module.exports = __webpack_public_path__ + \"static/media/register.8f14a4e6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__19yQo\",\"logo\":\"Navbar_logo__2W13o\",\"page\":\"Navbar_page__37hTu\",\"item\":\"Navbar_item__1iZJp\",\"newMessageCount\":\"Navbar_newMessageCount__6m2se\",\"active\":\"Navbar_active__12Gpb\"};","module.exports = __webpack_public_path__ + \"static/media/plus.81012bb8.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"HomePage_home__ZiYMh\",\"title\":\"HomePage_title__1vlbs\",\"logo\":\"HomePage_logo__qN3DH\",\"heartBeat\":\"HomePage_heartBeat__3Tf6D\",\"pages\":\"HomePage_pages__1O9p3\",\"page\":\"HomePage_page__34JNs\",\"pageText\":\"HomePage_pageText__23k-w\",\"jumpy\":\"HomePage_jumpy__1yThe\"};","import React from 'react';\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from \"../../assets/images/icons/umbrella-logo.png\";\r\nimport profileIcon from '../../assets/images/icons/profileIcon.png'\r\nimport dialogIcon from '../../assets/images/icons/dialogIcon.png'\r\nimport usersIcon from '../../assets/images/icons/usersIcon.png'\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = props => {\r\n    return <nav className={classes.nav}>\r\n        <div className={classes.logo}>\r\n            <NavLink to={'/'}>\r\n                <img src={logo} alt=''/>\r\n            </NavLink>\r\n        </div>\r\n        <div className={classes.page}>\r\n            <NavLink to={props.isAuth ? '/profile' : '/login'} exact activeClassName={classes.active}>\r\n                <div className={classes.item}>\r\n                    <img src={profileIcon} alt=''/>\r\n                    <div>{props.isAuth ? 'Profile' : 'Login'}</div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n        <div className={classes.page}>\r\n            <NavLink to={`/dialogs/${props.currentDialogId || ''}`} activeClassName={classes.active}>\r\n                <div className={classes.item}>\r\n                    <img src={dialogIcon} alt=''/>\r\n                    <div>Dialogs</div>\r\n                    {props.newMessageCount\r\n                        ? <div className={classes.newMessageCount}>\r\n                            <div>{props.newMessageCount < 99 ? props.newMessageCount : 99}</div>\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n        <div className={classes.page}>\r\n            <NavLink to=\"/users\" activeClassName={classes.active}>\r\n                <div className={classes.item}>\r\n                    <img src={usersIcon} alt=''/>\r\n                    <div>Users</div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentDialogId: state.dialogsReducer.currentDialogId,\r\n    isAuth: state.authReducer.isAuthorized,\r\n    newMessageCount: state.appReducer.newMessageCount\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Navbar);","import * as axios from \"axios\";\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '6ecf6817-783d-41e9-836b-3c4ab276cf8b'\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers: (currentPage, pageSize, searchValue) => {\r\n        return axiosInstance.get(`/users?count=${pageSize}&page=${currentPage}&term=${searchValue || ''}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    follow: userId => {\r\n        return axiosInstance.post(`/follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    unFollow: userId => {\r\n        return axiosInstance.delete(`/follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile: (userId) => {\r\n        return axiosInstance.get(`/profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getStatus: (userId) => {\r\n        return axiosInstance.get(`/profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    updateStatus: (status) => {\r\n        return axiosInstance.put(`/profile/status/`, {status})\r\n            .then(response => response.data)\r\n    },\r\n\r\n    updateProfileInfo: (profileData) => {\r\n        return axiosInstance.put(`/profile`, {...profileData})\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    authMe: () => {\r\n        return axiosInstance.get(`/auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    login: (data) => {\r\n        return axiosInstance.post(`/auth/login`, {\r\n            email: data.login,\r\n            password: data.password,\r\n            rememberMe: data.rememberMe\r\n        }).then(response => response.data)\r\n    },\r\n\r\n    logout: () => {\r\n        return axiosInstance.delete(`/auth/login`)\r\n            .then(response => response.data)\r\n    },\r\n}\r\n\r\nexport const dialogsAPI = {\r\n    getDialogs: () => {\r\n        return axiosInstance.get(`/dialogs`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    sendMessage: (userId, message) => {\r\n        return axiosInstance.post(`/dialogs/${userId}/messages`, {body: message})\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getMessages: (userId) => {\r\n        return axiosInstance.get(`/dialogs/${userId}/messages/`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    setNewDialog: (userId) => {\r\n        return axiosInstance.put(`/dialogs/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    deleteMessage: (messageId) => {\r\n        return axiosInstance.delete(`dialogs/messages/${messageId}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    refreshMessages: () => {\r\n        return axiosInstance.get(`dialogs/messages/new/count`)\r\n            .then(response => response.data)\r\n    }\r\n}","import {\r\n    FOLLOW,\r\n    SET_CURRENT_PAGE, SET_PORTION_NUMBER, SET_SEARCH_VALUE,\r\n    SET_TOTAL_USER_COUNT,\r\n    SET_USERS, SET_USERS_FETCHING,\r\n    TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    TOGGLE_IS_LOADING,\r\n    UNFOLLOW\r\n} from \"./actionTypes\";\r\nimport {dialogsAPI, usersAPI} from \"../api/api\";\r\nimport actions from \"redux-form/lib/actions\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    followingInProgress: [],\r\n    searchValue: '',\r\n    portionNumber: 1\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.totalUserCount\r\n            }\r\n\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n\r\n        case SET_SEARCH_VALUE:\r\n            return {\r\n                ...state,\r\n                searchValue: action.payload\r\n            }\r\n\r\n        case SET_PORTION_NUMBER:\r\n            return {\r\n                ...state,\r\n                portionNumber: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (id) => ({\r\n    type: FOLLOW, id\r\n})\r\n\r\nexport const unFollowSuccess = (id) => ({\r\n    type: UNFOLLOW, id\r\n})\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users\r\n})\r\n\r\nexport const setCurrentPage = (page) => ({\r\n    type: SET_CURRENT_PAGE, currentPage: page\r\n})\r\n\r\nexport const setTotalUserCount = (totalUserCount) => ({\r\n    type: SET_TOTAL_USER_COUNT, totalUserCount\r\n})\r\n\r\nexport const setSearchValue = (payload) => ({\r\n    type: SET_SEARCH_VALUE, payload\r\n})\r\n\r\nexport const setPortionNumber = payload => ({\r\n    type: SET_PORTION_NUMBER, payload\r\n})\r\n\r\nexport const toggleIsLoading = (isLoading) => ({\r\n    type: TOGGLE_IS_LOADING, isLoading\r\n})\r\n\r\nexport const toggleFollowingInProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS, isFetching, userId\r\n})\r\n\r\nexport const getUsers = (searchValue, currentPage = 1, pageSize = 50) => async dispatch => {\r\n    dispatch(setSearchValue(searchValue))\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(toggleIsLoading(true))\r\n    const data = await usersAPI.getUsers(currentPage, pageSize, searchValue)\r\n    dispatch(toggleIsLoading(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUserCount(data.totalCount))\r\n}\r\n\r\nexport const follow = (userId) => dispatch => {\r\n    followFlow(followSuccess, usersAPI.follow, userId, dispatch)\r\n}\r\n\r\nexport const unFollow = (userId) => async dispatch => {\r\n    followFlow(unFollowSuccess, usersAPI.unFollow, userId, dispatch)\r\n}\r\n\r\nconst followFlow = async (action, apiAction, userId, dispatch) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    const data = await apiAction(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(toggleFollowingInProgress(false, userId))\r\n        dispatch(action(userId))\r\n    }\r\n}","export const SET_IS_INITIALIZED = 'SET_IS_INITIALIZED'\r\nexport const SET_NEW_MESSAGE_COUNT = 'SET_NEW_MESSAGE_COUNT'\r\n\r\nexport const SET_PROFILE = 'SET_PROFILE'\r\nexport const SET_CURRENT_PROFILE_ID = 'SET_CURRENT_PROFILE_ID'\r\nexport const SET_PROFILE_STATUS = 'SET_PROFILE_STATUS'\r\nexport const ADD_POST = 'ADD_POST'\r\n\r\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\r\nexport const GET_MESSAGES = 'GET_MESSAGES'\r\nexport const SET_DIALOGS = 'SET_DIALOGS'\r\nexport const SET_CURRENT_DIALOG_ID = 'SET_CURRENT_DIALOG_ID'\r\nexport const SET_CURRENT_DIALOG_PHOTO = 'SET_CURRENT_DIALOG_PHOTO'\r\nexport const TOGGLE_MESSAGES_FETCHING = 'TOGGLE_MESSAGES_FETCHING'\r\nexport const DELETE_MESSAGE = 'DELETE_MESSAGE'\r\n\r\n\r\nexport const FOLLOW = 'FOLLOW'\r\nexport const UNFOLLOW = 'UNFOLLOW'\r\nexport const SET_USERS = 'SET_USERS'\r\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nexport const SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT'\r\nexport const SET_SEARCH_VALUE = 'SET_SEARCH_VALUE'\r\nexport const TOGGLE_IS_LOADING = 'TOGGLE_IS_LOADING'\r\nexport const TOGGLE_FOLLOWING_IN_PROGRESS = 'TOGGLE_FOLLOWING_IN_PROGRESS'\r\nexport const SET_PORTION_NUMBER = 'SET_PORTION_NUMBER'\r\n\r\nexport const SET_AUTH_DATA = 'SET_AUTH_DATA'\r\nexport const SET_AUTH_ERROR = 'SET_AUTH_ERROR'\r\nexport const SET_USER_DATA = 'SET_USER_DATA'\r\n","import styled, {css} from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n    margin: 5px 0;\r\n    font-size: 14px;\r\n    min-width: 80px;\r\n    max-width: 200px;\r\n    padding: 5px;\r\n    border: none;\r\n    border-radius: 3px;\r\n    background: firebrick;\r\n    box-shadow: 2px 2px 2px black;\r\n    color: white;\r\n    font-weight: bold;\r\n    text-shadow: 1px 1px 1px black;\r\n    outline: none;\r\n    \r\n    &:active {\r\n        transform: translateX(1px) translateY(1px);\r\n        box-shadow: inset 2px 2px 4px 1px rgba(0, 0, 0, .4);\r\n    }\r\n    \r\n    &:disabled {\r\n        opacity: .6;\r\n    }\r\n    \r\n    ${props => props.dim && css`\r\n        background: var(--darkThree);\r\n    `}\r\n    \r\n    ${props => props.blue && css`\r\n        background: steelblue;\r\n    `}    \r\n    \r\n`\r\n\r\nexport const TextArea = styled.textarea`\r\n    height: 70px;\r\n    width: 100%;\r\n    resize: none;\r\n    padding: 5px 10px;\r\n    box-sizing: border-box;\r\n    background: #18191a;\r\n    box-shadow: 1px 1px 1px 1px black;\r\n    border-radius: 2px;\r\n    color: whitesmoke;\r\n    outline: none;\r\n    font-size: 16px;\r\n    margin: 0;\r\n    \r\n    ${props => props.error && css`\r\n        border: 1px solid firebrick;\r\n    `}  \r\n`\r\n\r\nexport const Input = styled.input`\r\n    height: 35px;\r\n    width: 100%;\r\n    resize: none;\r\n    padding: 5px 10px;\r\n    box-sizing: border-box;\r\n    background: #18191a;\r\n    box-shadow: inset 1px 1px 1px 1px black;\r\n    border-radius: 2px;\r\n    color: whitesmoke;\r\n    outline: none;\r\n    font-size: 16px;\r\n    margin: 5px 0;\r\n    \r\n    &:-webkit-autofill {\r\n    -webkit-box-shadow: inset 0 0 0px 1000px #000;\r\n    -webkit-text-fill-color: whitesmoke;\r\n    transition: background-color 5000s ease-in-out 0s;\r\n    }\r\n    \r\n    ${props => props.error && css`\r\n        border: 1px solid firebrick;\r\n    `}\r\n    \r\n    ${props => props.empty && css`\r\n        background: none;\r\n        box-shadow: none;\r\n    `}  \r\n`\r\n\r\nexport const CheckBox = styled.input.attrs({ type: 'checkbox' })`\r\n    width: 20px;\r\n    height: 20px;\r\n    margin: 10px;\r\n`","import React, {useState} from 'react'\r\nimport classes from './User.module.css'\r\nimport userPhoto from \"../../../../assets/images/empty-avatar.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"../../../common/Inputs/Inputs\";\r\n\r\nconst User = props => {\r\n\r\n    return (\r\n        <div className={classes.user}>\r\n            <div>\r\n                <NavLink to={`/profile/${props.id}`}>\r\n                    <div className={classes.picture}>\r\n                        <img src={props.photos.small != null ? props.photos.small : userPhoto} alt=\"\"/>\r\n                    </div>\r\n                </NavLink>\r\n                <div className={classes.followButton}>\r\n                    {\r\n                        props.followed\r\n                            ? <Button\r\n                                dim\r\n                                onClick={() => props.unFollow(props.id)}\r\n                                disabled={props.followingInProgress.some(id => id === props.id)}\r\n                            >Unfollow</Button>\r\n                            : <Button\r\n                                onClick={() => props.follow(props.id)}\r\n                                disabled={props.followingInProgress.some(id => id === props.id)}\r\n                            >Follow</Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={classes.userInfo}>\r\n                <div>\r\n                    <NavLink to={`/profile/${props.id}`} className={classes.name}>\r\n                        <div>{props.name}</div>\r\n                    </NavLink>\r\n                    <div className={classes.status}>\r\n                        {props.status || 'No status'}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className={classes.location}>\r\n                        <div>Страна: {'user.location.country'}</div>\r\n                        <div>Город: {'user.location.city'}</div>\r\n                    </div>\r\n                </div>\r\n                <NavLink to={`/dialogs/${props.id}`}\r\n                         className={classes.sendMessage}\r\n                         onClick={() => props.startDialog(props.id)}\r\n                >\r\n                    <Button dim>Написать</Button>\r\n                </NavLink>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import {\r\n    ADD_POST,\r\n    SET_CURRENT_PROFILE_ID,\r\n    SET_PROFILE,\r\n    SET_PROFILE_STATUS,\r\n    TOGGLE_IS_LOADING,\r\n} from \"./actionTypes\";\r\nimport {profileAPI} from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    profile: null,\r\n    currentProfileId: null,\r\n    isLoading: false,\r\n    profileStatus: null,\r\n    posts: [\r\n        {id: 1, postText: 'Hi, how are you?', likes: 5},\r\n        {id: 2, postText: 'It\\'s my first post', likes: 13},\r\n        {id: 3, postText: 'Now second', likes: 22},\r\n        {id: 4, postText: 'And final', likes: 1},\r\n    ]\r\n}\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                postText: action.newPostText,\r\n                likes: Math.round(Math.random() * 100)\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_CURRENT_PROFILE_ID:\r\n            return {\r\n                ...state,\r\n                currentProfileId: action.currentProfileId,\r\n            }\r\n\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            }\r\n\r\n        case SET_PROFILE_STATUS:\r\n            return {\r\n                ...state,\r\n                profileStatus: action.profileStatus\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = (newPostText) => (\r\n    {type: ADD_POST, newPostText}\r\n)\r\n\r\nexport const setProfile = profile => (\r\n    {type: SET_PROFILE, profile}\r\n)\r\n\r\nexport const setProfileStatusAction = profileStatus => (\r\n    {type: SET_PROFILE_STATUS, profileStatus}\r\n)\r\n\r\nexport const setCurrentProfileId = currentProfileId => (\r\n    {type: SET_CURRENT_PROFILE_ID, currentProfileId}\r\n)\r\n\r\nexport const toggleIsLoading = (isLoading) => ({\r\n    type: TOGGLE_IS_LOADING, isLoading\r\n})\r\n\r\nexport const getProfile = (userId) => async dispatch => {\r\n    dispatch(toggleIsLoading(true))\r\n    const data = await profileAPI.getProfile(userId)\r\n    const status = await profileAPI.getStatus(userId)\r\n    dispatch(setProfileStatusAction(status))\r\n    dispatch(setProfile(data))\r\n    dispatch(setCurrentProfileId(userId))\r\n    dispatch(toggleIsLoading(false))\r\n}\r\n\r\nexport const getProfileStatus = (userId) => async dispatch => {\r\n    const data = await profileAPI.getStatus(userId)\r\n    dispatch(setProfileStatusAction(data))\r\n}\r\n\r\nexport const setProfileStatus = (status) => async dispatch => {\r\n    const data = profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setProfileStatusAction(status))\r\n    }\r\n}\r\n\r\nexport const updateProfileInfo = (profileId, profileData) => async dispatch => {\r\n    const data = await profileAPI.updateProfileInfo(profileData)\r\n}","import {SET_AUTH_DATA, SET_AUTH_ERROR, SET_USER_DATA, TOGGLE_IS_LOADING} from \"./actionTypes\";\r\nimport {authAPI, profileAPI} from \"../api/api\";\r\nimport {setProfile} from \"./profileReducer\";\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    likes: 123,\r\n    userData: null,\r\n    isAuthorized: false,\r\n    isLoading: false,\r\n    authError: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                userData: action.data,\r\n                isAuthorized: action.isAuthorized\r\n            }\r\n\r\n        case SET_AUTH_ERROR:\r\n            return {\r\n                ...state,\r\n                authError: action.error\r\n            }\r\n\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthData = (userId, login, email) => (\r\n    {type: SET_AUTH_DATA, data: {userId, login, email}}\r\n)\r\n\r\nexport const setUserData = (data, isAuthorized) => (\r\n    {type: SET_USER_DATA, data, isAuthorized}\r\n)\r\n\r\nexport const setAuthError = (error) => (\r\n    {type: SET_AUTH_ERROR, error}\r\n)\r\n\r\nexport const toggleIsLoading = (payload) => (\r\n    {type: TOGGLE_IS_LOADING, payload}\r\n)\r\n\r\nexport const getAuthData = () => async dispatch => {\r\n    const data = await authAPI.authMe()\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(setAuthData(id, login, email))\r\n        return dispatch(setUserDataThunk(id))\r\n    }\r\n    return data\r\n}\r\n\r\nexport const setUserDataThunk = (userId) => async dispatch => {\r\n    const data = await profileAPI.getProfile(userId)\r\n    dispatch(setProfile(data))\r\n    dispatch(setUserData(data, true))\r\n    return data\r\n}\r\n\r\nexport const login = (dataInput) => async dispatch => {\r\n    const data = await authAPI.login(dataInput)\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthData())\r\n    } else {\r\n        const message = data.messages.length > 0 ? data.messages[0] : 'Неверный логин или пароль'\r\n        dispatch(setAuthError(true))\r\n    }\r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    const data = await authAPI.logout()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthData(null, null, null))\r\n        dispatch(setUserData({}, false))\r\n    }\r\n}\r\n","import {SET_IS_INITIALIZED, SET_NEW_MESSAGE_COUNT} from \"./actionTypes\";\r\nimport {getAuthData} from \"./authReducer\";\r\nimport {dialogsAPI} from \"../api/api\";\r\n\r\n\r\nconst initialState = {\r\n    isInitialized: false,\r\n    newMessageCount: 0\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                isInitialized: action.payload,\r\n            }\r\n\r\n        case SET_NEW_MESSAGE_COUNT:\r\n            return {\r\n                ...state,\r\n                newMessageCount: action.payload,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsInitialized = (payload) => (\r\n    {type: SET_IS_INITIALIZED, payload}\r\n)\r\n\r\nexport const setNewMessageCount = (payload) => (\r\n    {type: SET_NEW_MESSAGE_COUNT, payload}\r\n)\r\n\r\nexport const appInitialize = () => async dispatch => {\r\n    const data = await dispatch(getAuthData())\r\n    dispatch(setIsInitialized(true))\r\n\r\n    if(data.resultCode === 0) {\r\n        const messagesCount = await dialogsAPI.refreshMessages()\r\n        dispatch(setNewMessageCount(messagesCount))\r\n    }\r\n}\r\n","import {\r\n    ADD_MESSAGE, DELETE_MESSAGE,\r\n    GET_MESSAGES,\r\n    SET_CURRENT_DIALOG_ID, SET_CURRENT_DIALOG_PHOTO,\r\n    SET_DIALOGS,\r\n    TOGGLE_IS_LOADING, TOGGLE_MESSAGES_FETCHING\r\n} from \"./actionTypes\";\r\nimport {dialogsAPI, profileAPI} from \"../api/api\";\r\nimport {setNewMessageCount} from \"./appReducer\";\r\n\r\nlet initialState = {\r\n    currentDialogId: null,\r\n    currentDialogPhoto: null,\r\n    dialogs: [],\r\n    messages: [{body: \"Выберите собеседника\", isMine: true}],\r\n    newMessage: '',\r\n    isLoading: false,\r\n    messagesFetching: false\r\n}\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let message = {\r\n                body: action.message,\r\n                isMine: true\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, message]\r\n            }\r\n\r\n        case GET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: action.messages.length > 0\r\n                    ? action.messages\r\n                    : [{body: \"Начните диалог\", isMine: true}]\r\n            }\r\n\r\n        case DELETE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: state.messages.filter(item => item.id !== action.payload)\r\n            }\r\n\r\n        case SET_DIALOGS:\r\n            return {\r\n                ...state,\r\n                dialogs: action.payload\r\n            }\r\n\r\n        case SET_CURRENT_DIALOG_ID:\r\n            return {\r\n                ...state,\r\n                currentDialogId: action.payload\r\n            }\r\n\r\n        case SET_CURRENT_DIALOG_PHOTO:\r\n            return {\r\n                ...state,\r\n                currentDialogPhoto: action.payload\r\n            }\r\n\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            }\r\n\r\n        case TOGGLE_MESSAGES_FETCHING:\r\n            return {\r\n                ...state,\r\n                messagesFetching: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const getMessagesAction = (messages) => (\r\n    {type: GET_MESSAGES, messages}\r\n)\r\n\r\nexport const addMessageAction = (message) => (\r\n    {type: ADD_MESSAGE, message}\r\n)\r\n\r\nexport const setDialogs = (payload) => (\r\n    {type: SET_DIALOGS, payload}\r\n)\r\n\r\nexport const setCurrentDialogId = (payload) => (\r\n    {type: SET_CURRENT_DIALOG_ID, payload}\r\n)\r\n\r\nexport const setCurrentDialogPhoto = (payload) => (\r\n    {type: SET_CURRENT_DIALOG_PHOTO, payload}\r\n)\r\nexport const toggleIsLoading = (payload) => (\r\n    {type: TOGGLE_IS_LOADING, payload}\r\n)\r\n\r\nexport const toggleMessagesFetching = (payload) => (\r\n    {type: TOGGLE_MESSAGES_FETCHING, payload}\r\n)\r\n\r\nexport const deleteMessageAction = (payload) => (\r\n    {type: DELETE_MESSAGE, payload}\r\n)\r\n\r\nexport const updateDialogs = () => async dispatch => {\r\n    const data = await dialogsAPI.getDialogs()\r\n    dispatch(setDialogs(data))\r\n}\r\n\r\nexport const getDialogs = () => async dispatch => {\r\n    dispatch(toggleIsLoading(true))\r\n    const data = await dialogsAPI.getDialogs()\r\n    console.log(data)\r\n    dispatch(setDialogs(data))\r\n    dispatch(toggleIsLoading(false))\r\n}\r\n\r\nexport const getMessages = (userId) => async dispatch => {\r\n    dispatch(toggleMessagesFetching(true))\r\n    const profile = await profileAPI.getProfile(userId)\r\n    if (profile.photos) {\r\n        dispatch(setCurrentDialogPhoto(profile.photos.small))\r\n    }\r\n\r\n    const data = await dialogsAPI.getMessages(userId)\r\n    dispatch(getMessagesAction(data.items))\r\n    dispatch(toggleMessagesFetching(false))\r\n\r\n    const newMessages = await dialogsAPI.refreshMessages()\r\n    dispatch(setNewMessageCount(newMessages))\r\n}\r\n\r\nexport const sendMessage = (userId, message) => async dispatch => {\r\n    dispatch(addMessageAction(message))\r\n    const data = await dialogsAPI.sendMessage(userId, message)\r\n    if (data.resultCode === 0) {\r\n        dispatch(updateDialogs())\r\n    }\r\n}\r\n\r\nexport const startDialog = (userId) => async dispatch => {\r\n    await dialogsAPI.setNewDialog(userId)\r\n    dispatch(updateDialogs())\r\n    dispatch(setCurrentDialogId(userId))\r\n    dispatch(getMessages(userId))\r\n}\r\n\r\nexport const deleteMessage = (messageId) => async dispatch => {\r\n    dispatch(deleteMessageAction(messageId))\r\n    await dialogsAPI.deleteMessage(messageId)\r\n}\r\n","import React from 'react'\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = () => (\r\n    <div className={classes.loader}></div>\r\n)\r\n\r\nexport default Loader","import React from 'react'\r\nimport User from \"./User/User\";\r\nimport {follow, unFollow} from \"../../../redux/usersReducer\";\r\nimport {startDialog} from \"../../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport classes from './Users.module.css'\r\nimport Loader from \"../../common/Loader/Loader\";\r\n\r\nconst Users = props => {\r\n\r\n    return (\r\n        <div className={classes.users}>\r\n            {props.usersFetching\r\n                ? <Loader/>\r\n                : props.users.map((user) => (\r\n                    <User\r\n                        key={user.id}\r\n                        {...user}\r\n                        {...props}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.usersReducer.users,\r\n    followingInProgress: state.usersReducer.followingInProgress,\r\n    usersFetching: state.usersReducer.usersFetching\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    follow,\r\n    unFollow,\r\n    startDialog\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React from \"react\";\r\nimport classes from './SearchForm.module.css'\r\nimport {Input, Button} from '../../components/common/Inputs/Inputs'\r\nimport {Form} from \"formik\";\r\n\r\nconst fields = [\r\n    {filed: 'name', name: \"Имя\"},\r\n    {filed: 'country', name: \"Страна\"},\r\n    {filed: 'city', name: \"Город\"},\r\n    {filed: 'year', name: \"Год рождения\"}\r\n]\r\n\r\nexport const SearchForm = ({handleChange}) => (\r\n    <Form>\r\n        {fields.map((item, index) => (\r\n            <div key={index} className={classes.item}>\r\n                <div>\r\n                    {item.name}:\r\n                </div>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    name={item.filed}\r\n                />\r\n            </div>\r\n        ))}\r\n        <div className={classes.searchButton}>\r\n            <Button blue type='submit'>Искать</Button>\r\n        </div>\r\n    </Form>\r\n)\r\n","import React from 'react'\r\nimport classes from './UsersSearch.module.css'\r\nimport {withFormik} from \"formik\";\r\nimport {SearchForm} from \"../../../forms/searchForm/SearchForm\";\r\n\r\nconst UsersFormik = withFormik({\r\n    mapPropsToValues({getUsers, setPortionNumber}) {\r\n        return {getUsers, setPortionNumber}\r\n    },\r\n    handleSubmit(values) {\r\n        values.setPortionNumber(1)\r\n        values.getUsers(values.name)\r\n    }\r\n})(SearchForm)\r\n\r\nconst UsersSearch = (props) => {\r\n\r\n    return (\r\n        <div className={classes.searchUsersWrapper}>\r\n            <div className={classes.searchUsers}>\r\n                <UsersFormik {...props}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersSearch","import React from 'react'\r\nimport classes from './Pagination.module.css'\r\nimport {FaArrowLeft, FaArrowRight} from \"react-icons/all\";\r\n\r\nconst Pagination = ({\r\n                        totalUserCount, pageSize = 50, currentPage = 1,\r\n                        portionSize = 10, onPageChange, portionNumber, setPortionNumber\r\n                    }) => {\r\n    let pageCount = Math.ceil(totalUserCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    const portionsCount = totalUserCount / (pageSize * portionSize)\r\n    const leftBorder = (portionNumber - 1) * portionSize + 1\r\n    const rightBorder = portionNumber * portionSize\r\n\r\n    const pagesPortion = pages.filter((page) => page >= leftBorder && page <= rightBorder)\r\n\r\n    const leftButtonClasses = [classes.pageNumber]\r\n    if (leftBorder < 2) {\r\n        leftButtonClasses.push(classes.disable)\r\n    }\r\n\r\n    const rightButtonClasses = [classes.pageNumber]\r\n    if (portionNumber > portionsCount) {\r\n        rightButtonClasses.push(classes.disable)\r\n    }\r\n\r\n    const toLeft = () => {\r\n        setPortionNumber(portionNumber - 1)\r\n    }\r\n\r\n    const toRight = () => {\r\n        setPortionNumber(portionNumber + 1)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.pageNumbers}>\r\n            <div className={leftButtonClasses.join(' ')} onClick={toLeft}>\r\n                <FaArrowLeft/>\r\n            </div>\r\n            {\r\n                pagesPortion.map((page) => (\r\n                    <div\r\n                        key={page}\r\n                        className={(currentPage === page ? classes.currentPage : null) + ' ' + classes.pageNumber}\r\n                        onClick={() => onPageChange(page)}\r\n                    >\r\n                        {page}\r\n                    </div>\r\n                ))\r\n            }\r\n            <div className={rightButtonClasses.join(' ')} onClick={toRight}><FaArrowRight/></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, {useEffect} from \"react\";\r\nimport {getUsers, setCurrentPage, setPortionNumber, updateUsers} from \"../../redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users/Users\";\r\nimport Loader from \"../common/Loader/Loader\";\r\nimport classes from \"./UsersPage.module.css\";\r\nimport UsersSearch from \"./UsersSearch/UsersSearch\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\n\r\nconst UsersPage = props => {\r\n\r\n    useEffect(() => {\r\n        if (props.users.length === 0) {\r\n            props.getUsers(props.searchValue)\r\n        }\r\n    }, [])\r\n\r\n    const onPageChange = page => {\r\n        props.getUsers(props.searchValue, page, props.pageSize)\r\n    }\r\n\r\n    const pagination = (\r\n        <Pagination\r\n            pageSize={props.pageSize}\r\n            totalUserCount={props.totalUserCount}\r\n            currentPage={props.currentPage}\r\n            onPageChange={onPageChange}\r\n            portionNumber={props.portionNumber}\r\n            setPortionNumber={props.setPortionNumber}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <div className={classes.usersPage}>\r\n            {props.isLoading\r\n                ? <Loader/>\r\n                : <div>\r\n                    {pagination}\r\n                    <Users/>\r\n                    {pagination}\r\n                </div>\r\n            }\r\n            <UsersSearch getUsers={props.getUsers} setPortionNumber={props.setPortionNumber}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.usersReducer.users,\r\n    pageSize: state.usersReducer.pageSize,\r\n    totalUserCount: state.usersReducer.totalUserCount,\r\n    currentPage: state.usersReducer.currentPage,\r\n    isLoading: state.usersReducer.isLoading,\r\n    portionNumber: state.usersReducer.portionNumber,\r\n    searchValue: state.usersReducer.searchValue\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getUsers,\r\n    setPortionNumber,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersPage)","import React from 'react'\r\nimport classes from './../ProfileInfo.module.css'\r\nimport noPhoto from \"../../../../assets/images/empty-avatar.png\";\r\n\r\nconst ProfilePhoto = ({photos}) => (\r\n    <div className={classes.avatar}>\r\n        <img src={photos.large != null ?photos.large : noPhoto} alt=\"\"/>\r\n    </div>\r\n)\r\n\r\nexport default ProfilePhoto","import React, {useState} from \"react\";\r\nimport classes from './ProfileInfoForm.module.css'\r\nimport {Button, Input} from \"../../components/common/Inputs/Inputs\";\r\nimport {Form} from \"formik\";\r\n\r\nconst fields = [\r\n    {field: 'status', name: 'Сатус'},\r\n    {field: 'aboutMe', name: 'Обо мне'},\r\n    {field: 'lookingForAJob', name: 'Ищу работу'},\r\n    {field: 'lookingForAJobDescription', name: ' О работе'}\r\n]\r\n\r\nexport const ProfileInfoForm = ({handleChange, values}) => {\r\n    const [isEdit, setIsEdit] = useState(false)\r\n\r\n    return (\r\n        <Form className={classes.form}>\r\n            {values.isAuth\r\n                ? <Button\r\n                    type={!isEdit ? 'submit' : 'button'}\r\n                    className={classes.button}\r\n                    onClick={() => setIsEdit(!isEdit)}\r\n                    blue={!isEdit}\r\n                >{isEdit ? 'Сохранить' : 'Изменить'}</Button>\r\n                : null\r\n            }\r\n            {fields.map((item, index) => (\r\n                <div className={classes.item} key={index}>\r\n                    <div className={classes.char}>\r\n                        {item.name}\r\n                    </div>\r\n                    <Input\r\n                        className={classes.charValue}\r\n                        onChange={handleChange}\r\n                        name={item.field}\r\n                        empty={!isEdit}\r\n                        disabled={!isEdit}\r\n                        value={values[item.field]}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </Form>\r\n    )\r\n}","import React from 'react'\r\nimport {withFormik} from \"formik\";\r\nimport {ProfileInfoForm} from \"../../../../forms/profileInfoForm/ProfileInfoForm\";\r\n\r\n\r\nconst ProfileInfoFormik = withFormik({\r\n    mapPropsToValues({\r\n                         profileStatus, aboutMe, lookingForAJob,\r\n                         isAuth, updateProfileInfo, setProfileStatus,\r\n                         profile, userId, fullName, lookingForAJobDescription\r\n                     }) {\r\n        return {\r\n            status: profileStatus || 'None',\r\n            aboutMe: aboutMe || 'None',\r\n            lookingForAJob: lookingForAJob ? 'Да' : 'Нет',\r\n            lookingForAJobDescription: lookingForAJobDescription || 'None',\r\n            isAuth, updateProfileInfo, setProfileStatus,\r\n            profile, userId, fullName}\r\n    },\r\n\r\n    handleSubmit(values) {\r\n        values.setProfileStatus(values.status)\r\n        values.updateProfileInfo(values.userId, {\r\n            aboutMe: values.aboutMe || 'None',\r\n            lookingForAJob: values.lookingForAJob === 'Да',\r\n            lookingForAJobDescription: values.lookingForAJobDescription || 'None',\r\n            fullName: values.fullName\r\n        })\r\n    }\r\n})(ProfileInfoForm)\r\n\r\nexport const ProfileInfoTable = props => (\r\n    <ProfileInfoFormik {...props}/>\r\n)","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getProfile,\r\n    getProfileStatus,\r\n    setProfileStatus,\r\n    updateProfileInfo\r\n} from \"../../../redux/profileReducer\";\r\nimport ProfilePhoto from \"./ProfilePhoto/ProfilePhoto\";\r\nimport {ProfileInfoTable} from \"./ProfileInfoTable/ProfileInfoTable\";\r\n\r\nconst ProfileInfo = ({profile, ...props}) => {\r\n    return (\r\n        <div className={classes.info}>\r\n            <ProfilePhoto photos={profile.photos}/>\r\n            <div>\r\n                <div className={classes.name}>{profile.fullName}</div>\r\n                <ProfileInfoTable {...props} {...profile} isAuth={props.authUserId === profile.userId} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profileReducer.profile,\r\n    authUserId: state.authReducer.userId,\r\n    profileStatus: state.profileReducer.profileStatus,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getProfile,\r\n    getProfileStatus,\r\n    setProfileStatus,\r\n    updateProfileInfo,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileInfo)","import React from 'react';\r\nimport classes from './MyStuff.module.css'\r\n\r\nconst MyStuff = (props) => (\r\n    <div className={classes.myStuffWrapper}>\r\n        <div className={classes.myStuff}>\r\n            <div>\r\n                <div>\r\n                    Documents\r\n                </div>\r\n                <div style={{textAlign: 'right'}}>\r\n                    (12)\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    Videos\r\n                </div>\r\n                <div style={{textAlign: 'right'}}>\r\n                    (43)\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    Pictures\r\n                </div>\r\n                <div style={{textAlign: 'right'}}>\r\n                    (145)\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    Music\r\n                </div>\r\n                <div style={{textAlign: 'right'}}>\r\n                    (3)\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    Games\r\n                </div>\r\n                <div style={{textAlign: 'right'}}>\r\n                    (12)\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n)\r\n\r\nexport default MyStuff;","import React from \"react\";\r\nimport classes from './Post.module.css'\r\nimport noPhoto from '../../../../../assets/images/empty-avatar.png'\r\nimport {FaThumbsUp} from \"react-icons/all\";\r\n\r\nconst Post = props => {\r\n    return(\r\n        <div className={classes.post}>\r\n            <img src={props.smallPicture || noPhoto} alt=''/>\r\n            <div className={classes.message}>\r\n                {props.message}\r\n            </div>\r\n            <div className={classes.likes}>\r\n                <span role='img' aria-labelledby=\"like\"><FaThumbsUp/> </span>{props.likes}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import {Button, TextArea} from \"../../components/common/Inputs/Inputs\";\r\nimport React from \"react\";\r\nimport classes from './MessageForm.module.css'\r\nimport {Form} from \"formik\";\r\n\r\nconst submitOnEnter = (e, handleSubmit) => {\r\n    if (e.key === 'Enter' && e.shiftKey === false) {\r\n        e.preventDefault()\r\n        handleSubmit()\r\n    }\r\n}\r\n\r\nexport const MessageForm = (props) => {\r\n    return (\r\n        <Form className={classes.messageForm}>\r\n            <TextArea\r\n                autoFocus\r\n                error={props.errors.newMessage}\r\n                onChange={props.handleChange}\r\n                name={'newMessage'}\r\n                placeholder={'Текст'}\r\n                onKeyDown={ e => submitOnEnter(e, props.handleSubmit)}\r\n            />\r\n            <div className={classes.errorMessage}>\r\n                {props.errors.newMessage}\r\n            </div>\r\n            <div>\r\n                <Button type='submit'>Отправить</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {MessageForm} from \"../../../../forms/messageForm/MessageForm\";\r\nimport {withFormik} from \"formik\";\r\nimport * as yup from 'yup'\r\nimport {addPost} from \"../../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst MyPosts = ({profile, ...props}) => {\r\n\r\n    const MessageFormik = withFormik({\r\n        validationSchema: yup.object().shape({\r\n            newMessage: yup.string().required('обязательное поле')\r\n        }),\r\n        handleSubmit(values) {\r\n            props.addPost(values.newMessage)\r\n        }\r\n    })(MessageForm)\r\n\r\n    return(\r\n        <div>\r\n            <div className={classes.MyPosts}>\r\n\r\n                <MessageFormik/>\r\n\r\n                <div className={classes.posts}>\r\n                    {props.posts.map((item, index) => {\r\n                        return (\r\n                            <Post\r\n                                key={item.id}\r\n                                message={item.postText}\r\n                                likes={item.likes}\r\n                                smallPicture={profile ? profile.photos.small : null}\r\n                            />\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profileReducer.profile,\r\n    posts: state.profileReducer.posts,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    addPost,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport classes from './MyFriends.module.css'\r\nimport noPhoto from '../../../../assets/images/empty-avatar.png'\r\n\r\nconst MyFriends = (props) => (\r\n    <div className={classes.myFriendsWrapper}>\r\n        <div className={classes.myFriends}>\r\n            <div className={classes.friend}>\r\n                <img src={noPhoto} alt=\"\"/>\r\n                <div>\r\n                    FriendName\r\n                </div>\r\n            </div>\r\n            <div className={classes.friend}>\r\n                <img src={noPhoto} alt=\"\"/>\r\n                <div>\r\n                    FriendName\r\n                </div>\r\n            </div>\r\n            <div className={classes.friend}>\r\n                <img src={noPhoto} alt=\"\"/>\r\n                <div>\r\n                    FriendName\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n)\r\n\r\nexport default MyFriends;","import React from \"react\";\r\nimport classes from './ProfileContent.module.css'\r\nimport MyStuff from \"./MyStuff/MyStuff\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport MyFriends from \"./MyFriens/MyFriends\";\r\n\r\nconst ProfileContent = () => {\r\n\r\n    return (\r\n        <div className={classes.profileContent}>\r\n            <MyStuff/>\r\n            <MyPosts/>\r\n            <MyFriends/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ProfileContent","import React, {useLayoutEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getProfileStatus} from \"../../redux/profileReducer\";\r\nimport Loader from \"../common/Loader/Loader\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport ProfileContent from \"./ProfileContent/ProfileContent\";\r\n\r\nconst ProfilePage = props => {\r\n    useLayoutEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        let userId = props.match.params.userId\r\n        props.getProfileStatus(userId)\r\n        props.getProfile(userId)\r\n    }, [])\r\n\r\n    return (\r\n        props.isLoading || !props.profile\r\n            ? <Loader/>\r\n            : <div>\r\n                <ProfileInfo/>\r\n                <ProfileContent/>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profileReducer.profile,\r\n    authUserId: state.authReducer.userId,\r\n    isLoading: state.profileReducer.isLoading,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getProfile,\r\n    getProfileStatus,\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(ProfilePage)","import React from 'react';\r\nimport classes from './ProfileMenu.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ProfileMenu = (props) => (\r\n    <div className={classes.profileMenu}>\r\n        <div>\r\n            <NavLink to={'/profile'} exact>Профиль</NavLink>\r\n        </div>\r\n        <div>\r\n            Настройки\r\n        </div>\r\n        <div onClick={props.logout}>\r\n            Выход\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default ProfileMenu;","import React from 'react';\r\nimport classes from './ProfileSmall.module.css'\r\nimport gear from '../../../assets/images/icons/gearIcon.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport noPhoto from '../../../assets/images/empty-avatar.png'\r\nimport ProfileMenu from \"../ProfileMenu/ProfileMenu\";\r\n\r\nconst ProfileSmall = (props) => (\r\n    <div className={classes.profileSmall}>\r\n        <div className={classes.options}>\r\n            <img src={gear} alt=\"\"/>\r\n            <div className={classes.menu}>\r\n                <ProfileMenu logout={props.logout}/>\r\n            </div>\r\n        </div>\r\n        <div className={classes.photoSmall}>\r\n            <NavLink to={`/profile`}>\r\n                <img src={props.photos.small != null ? props.photos.small : noPhoto} alt=\"\"/>\r\n            </NavLink>\r\n        </div>\r\n        <NavLink to={`/profile`}>\r\n            <div className={classes.name}>\r\n                {props.login}\r\n            </div>\r\n            <div className={classes.likes}>\r\n                Likes {props.likes}\r\n            </div>\r\n        </NavLink>\r\n\r\n    </div>\r\n)\r\n\r\nexport default ProfileSmall;","import React from 'react'\r\nimport classes from './Search.module.css'\r\nimport {FaSearch} from \"react-icons/all\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {Field, Form, withFormik} from \"formik\";\r\nimport {getUsers, setCurrentPage, setPortionNumber, setSearchValue} from \"../../../redux/usersReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Search = props => {\r\n\r\n    const search = ({handleSubmit}) => {\r\n        return <Form className={classes.searchField}>\r\n            <div className={classes.searchIcon}>\r\n                <FaSearch onClick={handleSubmit}/>\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    type={'text'}\r\n                    name={'search'}\r\n                    placeholder={'Введите имя'}\r\n                />\r\n            </div>\r\n        </Form>\r\n    }\r\n\r\n    const SearchFormik = withFormik({\r\n        mapPropsToValues() {\r\n            return {search: ''}\r\n        },\r\n\r\n        handleSubmit(values) {\r\n            props.setPortionNumber(1)\r\n            props.getUsers(values.search)\r\n            props.history.push(\"/users\")\r\n        }\r\n    })(search)\r\n\r\n    return <SearchFormik/>\r\n}\r\n\r\nexport default withRouter(connect(null, {getUsers, setPortionNumber})(Search))","import React from 'react';\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport ProfileSmall from \"./ProfileSmall/ProfileSmall\";\r\nimport Search from \"../common/Search/Search\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthData, logout} from \"../../redux/authReducer\";\r\n\r\nconst Header = (props) => {\r\n    return <div className={classes.headerWrapper}>\r\n        <header className={classes.header}>\r\n            <div className={classes.appName}>\r\n                VIRAL\r\n            </div>\r\n            <div className={classes.search}>\r\n                <Search/>\r\n            </div>\r\n\r\n            <div className={classes.auth}>\r\n                <div>\r\n                    {props.isAuthorized\r\n                        ? <ProfileSmall\r\n                            login={props.login}\r\n                            logout={props.logout}\r\n                            likes={props.likes}\r\n                            {...props.userData}/>\r\n                        : <div>\r\n                            <div>\r\n                                <NavLink className={classes.login} to={`/login`}>Войти</NavLink>\r\n                            </div>\r\n                            <div>\r\n                                <a className={classes.register}\r\n                                   href={`https://social-network.samuraijs.com/signUp`}\r\n                                   target=\"_blank\"\r\n                                >Зарегистрироваться</a>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </header>\r\n        <div className={classes.bottom}></div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    login: state.authReducer.login,\r\n    likes: state.authReducer.likes,\r\n    userData: state.authReducer.userData,\r\n    isAuthorized: state.authReducer.isAuthorized,\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAuthData, logout} )(Header)","import React from 'react'\r\nimport classes from \"../../forms/loginForm/LoginForm.module.css\";\r\nimport {Form} from \"formik\";\r\nimport {Button, Input, CheckBox} from \"../../components/common/Inputs/Inputs\";\r\n\r\n\r\nexport const LoginForm = ({errors, touched, handleChange, values}) => {\r\n    return (\r\n        <Form>\r\n            <div className={classes.field}>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    placeholder={'Логин'}\r\n                    name={'login'}\r\n                    error={touched.login && errors.login}\r\n                    value={values.login}\r\n                />\r\n                <div className={classes.errorMessage}> {(touched.login && errors.login) ? errors.login: null} </div>\r\n            </div>\r\n            <div className={classes.field}>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    placeholder={'Пароль'}\r\n                    name={'password'}\r\n                    type={'password'}\r\n                    error={touched.password && errors.password}\r\n                    value={values.password}\r\n                />\r\n                <div className={classes.errorMessage}>{touched.password && errors.password}</div>\r\n            </div>\r\n            <div className={classes.rememberMe}>\r\n                <CheckBox name={'rememberMe'}/>\r\n                <div>\r\n                    Запомнить меня\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Button type='submit'>Войти</Button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {login} from \"../../../redux/authReducer\";\r\nimport classes from \"./Login.module.css\";\r\nimport {withFormik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {LoginForm} from \"../../../forms/loginForm/LoginForm\";\r\n\r\nconst Login = props => {\r\n\r\n    const LoginFormik = withFormik({\r\n        mapPropsToValues() {\r\n            return {login: '', password: ''}\r\n        },\r\n        validationSchema: yup.object().shape({\r\n            login: yup.string().min(3).required('обязательное поле'),\r\n            password: yup.string().min(3).required('обязательное поле')\r\n        }),\r\n        handleSubmit(values) {\r\n            props.login(values)\r\n        }\r\n    })(LoginForm)\r\n\r\n    return (\r\n        props.isAuthorized\r\n        ? <Redirect to={'/profile'}/>\r\n        : <div className={classes.login}>\r\n            <div className={classes.title}>Вход</div>\r\n            <LoginFormik />\r\n            {props.authError ? <div className={classes.error}>Неверный логин или пароль</div>: null}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthorized: state.authReducer.isAuthorized,\r\n    authError: state.authReducer.authError\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    login\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(Login)","import React from 'react';\r\nimport classes from './Footer.module.css'\r\nimport instagram from '../../assets/images/icons/social/instagram.svg'\r\nimport vk from '../../assets/images/icons/social/vk.png'\r\nimport telegram from '../../assets/images/icons/social/telegram.svg'\r\nimport youtube from '../../assets/images/icons/social/youtube.png'\r\n\r\nconst Footer = () => {\r\n    const refs = [\r\n        {icon: instagram, name: 'Инстаграм', a: 'https://instagram.com/itkamasutra'},\r\n        {icon: vk, name: 'Вконтакте', a: 'https://vk.com/itkamasutra'},\r\n        {icon: telegram, name: 'Телеграм', a: 'https://telegram.me/itkamasutra'},\r\n        {icon: youtube, name: 'YouTube', a: 'https://www.youtube.com/playlist?list=PLcvhF2Wqh7DNVy1OCUpG3i5lyxyBWhGZ8'},\r\n    ]\r\n\r\n    const website = [\r\n        {icon: 'IT-KAMASUTRA:', name: 'https://it-kamasutra.com', a: 'https://it-kamasutra.com'},\r\n        {icon: 'IT-INCUBATOR:', name: 'https://it-incubator.bym', a: 'https://it-incubator.by'},\r\n        {icon: 'PATREON:', name: 'https://www.patreon.com/itkamasutra', a: 'https://www.patreon.com/itkamasutra'},\r\n        {icon: 'API:', name: 'https://social-network.samuraijs.com/', a: 'https://social-network.samuraijs.com/'},\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.footerWrapper}>\r\n            <div className={classes.top}/>\r\n            <div className={classes.footer}>\r\n                <div>\r\n                    {refs.map((item, index) => {\r\n                        return (\r\n                            <div className={classes.row} key={index}>\r\n                                <div className={classes.icon}>\r\n                                    <img src={item.icon} alt=\"\"/>\r\n                                </div>\r\n                                <a href={item.a} target={'_blank'} className={classes.ref}>\r\n                                    {item.name}\r\n                                </a>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div>\r\n                    {website.map((item, index) => {\r\n                        return (\r\n                            <div className={classes.row} key={index}>\r\n                                <div className={classes.website}>\r\n                                    {item.icon}\r\n                                </div>\r\n                                <a href={item.a} target={'_blank'} className={classes.ref}>\r\n                                    {item.name}\r\n                                </a>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport classes from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport noPhoto from '../../../../assets/images/empty-avatar.png'\r\n\r\nconst Dialog = props => {\r\n    return (\r\n        <NavLink\r\n            to={`/dialogs/${props.id}`}\r\n            className={classes.dialog}\r\n            activeClassName={classes.active}\r\n            onClick={() => props.setCurrentDialog(props.id, props.index)}\r\n        >\r\n            <div>\r\n                <img src={props.photos.small || noPhoto} alt=\"\"/>\r\n            </div>\r\n            <div>\r\n                {props.userName}\r\n            </div>\r\n            {props.hasNewMessages\r\n                ? <div className={classes.newMessages}>\r\n                    <div>{props.newMessagesCount < 99 ? props.newMessagesCount : 99}</div>\r\n                </div>\r\n                : null\r\n            }\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nexport default Dialog","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport {\r\n    getDialogs, getMessages,\r\n    setCurrentDialogId,\r\n    updateDialogs\r\n} from \"../../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {Button} from \"../../common/Inputs/Inputs\";\r\nimport plusIcon from '../../../assets/images/icons/plus.png'\r\n\r\nconst Dialogs = props => {\r\n    const setCurrentDialog = (userId) => {\r\n        props.setCurrentDialogId(userId)\r\n        props.getMessages(userId)\r\n        props.updateDialogs()\r\n    }\r\n\r\n    return (\r\n        <div className={classes.users}>\r\n            {props.dialogs.map((item, index) => {\r\n                return (\r\n                    <Dialog\r\n                        setCurrentDialog={setCurrentDialog}\r\n                        key={item.id}\r\n                        index={index}\r\n                        {...item}\r\n                    />\r\n                )\r\n            })}\r\n            <div className={classes.findUsers}>\r\n                <NavLink to={`/users/`}>\r\n                    <Button dim>Найти</Button>\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogs: state.dialogsReducer.dialogs,\r\n    isLoading: state.dialogsReducer.isLoading\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getDialogs,\r\n    getMessages,\r\n    setCurrentDialogId,\r\n    updateDialogs,\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)","import React from \"react\";\r\nimport classes from \"./Message.module.css\";\r\nimport noPhoto from \"../../../../assets/images/empty-avatar.png\"\r\nimport {FaTimes} from \"react-icons/all\";\r\n\r\nconst Message = props => {\r\n    const date = new Date(props.addedAt).toLocaleDateString()\r\n\r\n    let cls = [classes.messageWrapper]\r\n    if (!props.isMine) {\r\n        cls.push(classes.personMessage)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <div className={classes.photo}>\r\n                {\r\n                    props.isMine\r\n                        ? <img src={props.myPhoto || noPhoto} alt=\"\"/>\r\n                        : <img src={props.currentDialogPhoto || noPhoto} alt=\"\"/>\r\n                }\r\n            </div>\r\n            <div className={classes.message}>\r\n                {props.body}\r\n                <div className={classes.date}>\r\n                    {props.addedAt && date}\r\n                </div>\r\n                <div className={classes.delete}\r\n                     onClick={() => props.deleteMessage(props.id)}\r\n                >\r\n                    <FaTimes/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message","import React, {useRef, useEffect} from \"react\";\r\nimport classes from './Messages.module.css'\r\nimport Message from \"./Message/Message\";\r\nimport audio from '../../../assets/sounds/BlobSound.ogg'\r\nimport {MessageForm} from \"../../../forms/messageForm/MessageForm\";\r\nimport {withFormik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    deleteMessage,\r\n    getMessages,\r\n    sendMessage,\r\n} from \"../../../redux/dialogsReducer\";\r\nimport Loader from \"../../common/Loader/Loader\";\r\n\r\nconst blobSound = new Audio(audio)\r\n\r\nconst Messages = props => {\r\n    const MessageReduxForm = withFormik({\r\n        mapPropsToValues({currentDialogId}) {\r\n            return {currentDialogId}\r\n        },\r\n        validationSchema: yup.object().shape({\r\n            newMessage: yup.string().required('обязательное поле')\r\n        }),\r\n        handleSubmit(values) {\r\n            if (values.currentDialogId) {\r\n                blobSound.play()\r\n                props.sendMessage(values.currentDialogId, values.newMessage)\r\n            }\r\n        }\r\n    })(MessageForm)\r\n\r\n    const ref = useRef(null)\r\n    const autoScroll = () => {\r\n        ref.current.scrollIntoView({behavior: \"smooth\", block: 'nearest'})\r\n    }\r\n    useEffect(autoScroll, [props.messages])\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.messages}>\r\n                {props.messagesFetching\r\n                    ? <Loader/>\r\n                    : props.messages.map((item, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <Message\r\n                                    {...item}\r\n                                    deleteMessage={props.deleteMessage}\r\n                                    isMine={item.isMine || item.senderId === props.userId}\r\n                                    currentDialogPhoto={props.currentDialogPhoto}\r\n                                    myPhoto={props.myPhoto}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    })}\r\n                {}\r\n                <div ref={ref}></div>\r\n\r\n            </div>\r\n            <MessageReduxForm currentDialogId={props.currentDialogId}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    messages: state.dialogsReducer.messages,\r\n    userId: state.authReducer.userId,\r\n    currentDialogId: state.dialogsReducer.currentDialogId,\r\n    currentDialogPhoto: state.dialogsReducer.currentDialogPhoto,\r\n    myPhoto: state.authReducer.userData.photos.small,\r\n    messagesFetching: state.dialogsReducer.messagesFetching\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getMessages,\r\n    sendMessage,\r\n    deleteMessage\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Messages)","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component, componentProps) => {\r\n    const RedirectComponent = props => {\r\n        if (!props.isAuthorized) {\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n\r\n        return <Component {...props} {...componentProps}/>\r\n    }\r\n\r\n    const mapStateToProps = state => ({\r\n        isAuthorized: state.authReducer.isAuthorized\r\n    })\r\n\r\n    return connect(mapStateToProps, null)(RedirectComponent)\r\n}","import React, {useLayoutEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getDialogs, getMessages,\r\n    setCurrentDialogId,\r\n    updateDialogs\r\n} from \"../../redux/dialogsReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Loader from \"../common/Loader/Loader\";\r\nimport classes from \"./DialogsPage.module.css\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst DialogsPage = props => {\r\n\r\n    useLayoutEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        if (props.dialogs.length === 0) {\r\n            props.getDialogs()\r\n            const userId = props.match.params.userId\r\n            if (userId) {\r\n                props.setCurrentDialogId(userId)\r\n                props.getMessages(userId)\r\n            }\r\n        } else {\r\n            console.log('here')\r\n            props.updateDialogs()\r\n        }\r\n    }, [])\r\n\r\n    if (props.isLoading) {\r\n        return <Loader/>\r\n    }\r\n    return (\r\n        <div className={classes.dialogsWrapper}>\r\n            <Dialogs/>\r\n            <Messages/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    dialogs: state.dialogsReducer.dialogs,\r\n    isLoading: state.dialogsReducer.isLoading\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getDialogs,\r\n    getMessages,\r\n    setCurrentDialogId,\r\n    updateDialogs,\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)((DialogsPage))","import React from 'react'\r\nimport classes from './SplashScreen.module.css'\r\nimport logo from '../../../assets/images/icons/umbrella-logo.png'\r\n\r\nconst SplashScreen = () => (\r\n    <div className={classes.splashScreen}>\r\n        <div>\r\n            <div className={classes.picture}>\r\n                <img src={logo} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default SplashScreen","import React, {useLayoutEffect} from 'react';\r\nimport classes from './HomePage.module.css'\r\nimport logo from '../../assets/images/icons/umbrella-logo.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport usersIcon from '../../assets/images/icons/usersIcon.png'\r\nimport profileIcon from '../../assets/images/icons/profileIcon.png'\r\nimport dialogsIcon from '../../assets/images/icons/dialogIcon.png'\r\nimport loginIcon from '../../assets/images/icons/log-in.png'\r\nimport registerIcon from '../../assets/images/icons/register.png'\r\n\r\nconst HomePage = () => {\r\n    useLayoutEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n    const pages = [\r\n        {icon: profileIcon, text: \"Profile\", link: '/profile'},\r\n        {icon: usersIcon, text: \"Users\", link: '/users'},\r\n        {icon: dialogsIcon, text: \"Dialogs\", link: '/dialogs'},\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.home}>\r\n            <div className={classes.title}>\r\n                VIRAL\r\n            </div>\r\n            <div className={classes.logo}>\r\n                <img src={logo} alt=\"\"/>\r\n            </div>\r\n            <div className={classes.pages}>\r\n                {\r\n                    pages.map((item, index) => {\r\n                        return (\r\n                            <NavLink to={item.link}\r\n                                     className={classes.page}\r\n                                     key={index}\r\n                            >\r\n                                <img src={item.icon} alt=\"x\"/>\r\n                                <div className={classes.pageText}>{item.text}</div>\r\n                            </NavLink>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className={classes.pages}>\r\n                <NavLink to={'/login'} className={classes.page}>\r\n                    <img src={loginIcon} alt=\"x\"/>\r\n                    <div className={classes.pageText}>Login</div>\r\n                </NavLink>\r\n                <a href={'https://social-network.samuraijs.com/signUp'} className={classes.page} target={'_blank'}>\r\n                    <img src={registerIcon} alt=\"x\"/>\r\n                    <div className={classes.pageText}>SignUp</div>\r\n                </a>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, {useLayoutEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getProfileStatus, setProfile} from \"../../redux/profileReducer\";\r\nimport Loader from \"../common/Loader/Loader\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport ProfileContent from \"./ProfileContent/ProfileContent\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst MyProfilePage = props => {\r\n    useLayoutEffect(() => {\r\n        window.scrollTo(0, 0)\r\n        props.getProfile(props.authUserId)\r\n        props.getProfileStatus(props.authUserId)\r\n    }, [])\r\n\r\n    return (\r\n        props.isLoading\r\n            ? <Loader/>\r\n            : <div>\r\n                <ProfileInfo/>\r\n                <ProfileContent/>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    profile: state.profileReducer.profile,\r\n    userData: state.authReducer.userData,\r\n    authUserId: state.authReducer.userId,\r\n    isLoading: state.profileReducer.isLoading,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    getProfile,\r\n    getProfileStatus,\r\n    setProfile\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter\r\n)(MyProfilePage)","import React, {Component} from 'react';\r\nimport classes from './App.module.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport UsersPage from \"./components/UsersPage/UsersPage\";\r\nimport ProfilePage from \"./components/ProfilePage/ProfilePage\";\r\nimport Header from \"./components/Header/Header\";\r\nimport Login from \"./components/Auth/Login/Login\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport DialogsPage from \"./components/DialogsPage/DialogsPage\";\r\nimport SplashScreen from \"./components/common/SpalshScreen/SplashScreen\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {appInitialize} from \"./redux/appReducer\";\r\nimport HomePage from \"./components/HomePage/HomePage\";\r\nimport MyProfilePage from \"./components/ProfilePage/MyProfilePage\";\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.appInitialize()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isInitialized) {\r\n            return <SplashScreen/>\r\n        }\r\n\r\n        return (\r\n            <HashRouter>\r\n                <div className={classes.background}/>\r\n                <div className={classes.appWrapper}>\r\n                    <Navbar/>\r\n                    <div className={classes.mainWrapper}>\r\n                        <Header/>\r\n                        <div>\r\n                            <div className={classes.content}>\r\n                                <Switch>\r\n                                    <Route path={'/'} exact component={HomePage}/>\r\n                                    <Route path={'/profile'} exact component={MyProfilePage}/>\r\n                                    <Route path={'/profile/:userId?'} component={ProfilePage}/>\r\n                                    <Route path={'/dialogs/:userId?'} component={DialogsPage}/>\r\n                                    <Route path={'/users'} component={UsersPage}/>\r\n                                    <Route path={'/login'} component={Login}/>\r\n                                </Switch>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Footer/>\r\n                    </div>\r\n                </div>\r\n            </HashRouter>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isInitialized: state.appReducer.isInitialized\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {appInitialize})(App));","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {dialogsReducer} from \"./dialogsReducer\";\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer} from \"./appReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    dialogsReducer,\r\n    profileReducer,\r\n    usersReducer,\r\n    authReducer,\r\n    appReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {store} from \"./redux/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerWrapper\":\"Footer_footerWrapper__1JRQH\",\"footer\":\"Footer_footer__24E85\",\"top\":\"Footer_top__1r7ZE\",\"item\":\"Footer_item__3na39\",\"row\":\"Footer_row__3_DXd\",\"icon\":\"Footer_icon__WZrYI\",\"ref\":\"Footer_ref__1DvNN\",\"website\":\"Footer_website__2CTXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__2WsdD\",\"picture\":\"User_picture__3rg0I\",\"followButton\":\"User_followButton__3jvdi\",\"userInfo\":\"User_userInfo__3OqQw\",\"name\":\"User_name__3hjvG\",\"status\":\"User_status__2XRzK\",\"location\":\"User_location__1jnyb\",\"sendMessage\":\"User_sendMessage__1Ukiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"Header_headerWrapper__2Qgri\",\"header\":\"Header_header__k4xpG\",\"appName\":\"Header_appName__1xt91\",\"search\":\"Header_search__268VV\",\"auth\":\"Header_auth__3I8Tu\",\"bottom\":\"Header_bottom__2i33d\",\"login\":\"Header_login__2GNQn\",\"register\":\"Header_register__1373I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumbers\":\"Pagination_pageNumbers__2SCjr\",\"currentPage\":\"Pagination_currentPage__EPtu7\",\"pageNumber\":\"Pagination_pageNumber__2VjTW\",\"disable\":\"Pagination_disable__3WDZc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileSmall\":\"ProfileSmall_profileSmall__2gqk2\",\"photoSmall\":\"ProfileSmall_photoSmall__1_PbH\",\"options\":\"ProfileSmall_options__21V8B\",\"menu\":\"ProfileSmall_menu__1Gfvr\",\"name\":\"ProfileSmall_name__1uKlG\",\"likes\":\"ProfileSmall_likes__1Fhw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2wEWi\",\"blob\":\"Message_blob__p_e3u\",\"delete\":\"Message_delete__3K-LM\",\"messageWrapper\":\"Message_messageWrapper__3kqJH\",\"personMessage\":\"Message_personMessage__25SGx\",\"photo\":\"Message_photo__3sMSS\",\"date\":\"Message_date__3Vy0z\"};","module.exports = __webpack_public_path__ + \"static/media/umbrella-logo.8fdeecf4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileInfoForm_form__1brgs\",\"item\":\"ProfileInfoForm_item__26y4C\",\"char\":\"ProfileInfoForm_char__3DUaJ\",\"charValue\":\"ProfileInfoForm_charValue__W_ml1\",\"button\":\"ProfileInfoForm_button__3RKGW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myFriendsWrapper\":\"MyFriends_myFriendsWrapper__vyqo9\",\"myFriends\":\"MyFriends_myFriends__2LN3n\",\"friend\":\"MyFriends_friend__31swf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"LoginForm_field__3hbEM\",\"rememberMe\":\"LoginForm_rememberMe__1-YZP\",\"errorMessage\":\"LoginForm_errorMessage__JsUF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__is5kU\",\"infoAppear\":\"ProfileInfo_infoAppear__3olrM\",\"avatar\":\"ProfileInfo_avatar__3cw5U\",\"description\":\"ProfileInfo_description__lMRH2\",\"characteristic\":\"ProfileInfo_characteristic__22cUu\",\"name\":\"ProfileInfo_name__gu73k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__1HMln\",\"appear\":\"App_appear__2l4SW\",\"mainWrapper\":\"App_mainWrapper__6FM4T\",\"content\":\"App_content__1fI4M\",\"background\":\"App_background__1PlVo\"};","module.exports = __webpack_public_path__ + \"static/media/profileIcon.6b76fde3.png\";","module.exports = __webpack_public_path__ + \"static/media/dialogIcon.6c93f562.png\";","module.exports = __webpack_public_path__ + \"static/media/usersIcon.7f14165c.png\";"],"sourceRoot":""}